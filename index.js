require("dotenv").config();
const TelegramBot = require("node-telegram-bot-api");
const {
  commands,
  opts,
  menuKeyboard,
  editProfileKeyboard,
} = require("./const");

const token = "6590028032:AAEXCEoI7AvKUTefs2vG3m8rAdvEr6XySmM";

const bot = new TelegramBot(token, { polling: true });

async function openKeyboard(chatId, text, keyboard) {
  const board = await bot.sendMessage(chatId, text, {
    reply_markup: {
      keyboard: keyboard,
      resize_keyboard: true,
      // one_time_keyboard: true,
    },
  });
  return board;
}

bot.setMyCommands(commands);

bot.on("message", async (msg) => {
  const { text } = msg;
  const chatId = msg.chat.id;
  try {
    switch (text) {
      case "/start":
        await bot.sendMessage(chatId, `–ü—Ä–∏–≤–µ—Ç, ${msg.from.first_name}!üëãüèª`);
        await bot.sendSticker(
          chatId,
          "https://tlgrm.eu/_/stickers/ccd/a8d/ccda8d5d-d492-4393-8bb7-e33f77c24907/192/20.webp"
        );
        return;

      case "/menu":
        const mKeyboard = await openKeyboard(chatId, "–ú–µ–Ω—é –±–æ—Ç–∞", menuKeyboard);
        return mKeyboard;
      case "4.–ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é":
        return bot.sendMessage(chatId, "–ú–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ", {
          reply_markup: {
            remove_keyboard: true,
          },
        });

      case "2.–ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É":
        const eKeyboard = await openKeyboard(
          chatId,
          "–ß—Ç–æ –º–µ–Ω—è–µ–º?",
          editProfileKeyboard
        );
        return eKeyboard;

      case "–ù–∞–∑–∞–¥":
        const bKeyboard = await openKeyboard(chatId, "–ù–∞–∑–∞–¥", menuKeyboard);
        return bKeyboard;
    }
  } catch (e) {
    // if (text === "–ù–∞–∑–∞–¥") {
    //   return bot.sendMessage(chatId, "–ù–∞–∑–∞–¥", {
    //     reply_markup: {
    //       keyboard: [
    //         ["1.–°–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É", "2.–ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É"],
    //         ["3.–°–º–æ—Ç—Ä–µ—Ç—å –¥—É—Ä–≥–∏–µ –∞–Ω–∫–µ—Ç—ã", "4.–ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é"],
    //       ],
    //       resize_keyboard: true,
    //     },
    //   });
    // }
    // if (text == "4.–ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é") {
    //   return bot.sendMessage(chatId, "–ú–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ", {
    //     reply_markup: {
    //       remove_keyboard: true,
    //     },
    //   });
    // }

    // if (text === "/start") {
    //   await bot.sendMessage(chatId, `–ü—Ä–∏–≤–µ—Ç, ${msg.from.first_name}!üëãüèª`);

    //   return bot.sendSticker(
    //     chatId,
    //     "https://tlgrm.eu/_/stickers/ccd/a8d/ccda8d5d-d492-4393-8bb7-e33f77c24907/192/20.webp"
    //   );
    // }
    // if (text === "/menu") {
    //   return bot.sendMessage(chatId, `–ú–µ–Ω—é –±–æ—Ç–∞`, {
    //     reply_markup: {
    //       keyboard: [
    //         ["1.–°–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É", "2.–ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É"],
    //         ["3.–°–º–æ—Ç—Ä–µ—Ç—å –¥—É—Ä–≥–∏–µ –∞–Ω–∫–µ—Ç—ã", "4.–ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é"],
    //       ],
    //       resize_keyboard: true,
    //     },
    //   });
    // }
    // if (text === "1.–°–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É") {
    //   await bot.sendMessage(chatId, "–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞:");
    //   return bot.sendMessage(chatId, "–ê–ù–ö–ï–¢–ê");
    // }
    // if (text === "2.–ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É") {
    //   return bot.sendMessage(chatId, "–ß—Ç–æ –º–µ–Ω—è–µ–º?", {
    //     reply_markup: {
    //       keyboard: [["1.–ò–º—è", "2.–§–æ—Ç–æ"], ["3.–û–ø–∏—Å–∞–Ω–∏–µ", "4.–Ø–∑—ã–∫"], ["–ù–∞–∑–∞–¥"]],
    //       resize_keyboard: true,
    //     },
    //   });
    // }
    // if (text === "1.–ò–º—è") {
    //   return bot.sendMessage(chatId, "–í–≤–µ–¥–∏—Ç–µ –∏–º—è", {
    //     reply_markup: JSON.stringify({
    //       inline_keyboard: [[{ text: "heeey", callback_data: "1" }]],
    //     }),
    //   });
    // }
    // if (text === "2.–§–æ—Ç–æ") {
    //   return bot.sendMessage(chatId, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ");
    // }
    // if (text === "3.–û–ø–∏—Å–∞–Ω–∏–µ") {
    //   return bot.sendMessage(chatId, "–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ");
    // }
    // if (text === "4.–Ø–∑—ã–∫") {
    //   return bot.sendMessage(chatId, "–ö–∞–∫–æ–π —è–∑—ã–∫ –≤—ã –∏–∑—É—á–∞–µ—Ç–µ?");
    // }
    // if (text === "–ù–∞–∑–∞–¥") {
    //   return bot.sendMessage(chatId, "–ù–∞–∑–∞–¥", {
    //     reply_markup: {
    //       keyboard: [
    //         ["1.–°–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É", "2.–ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É"],
    //         ["3.–°–º–æ—Ç—Ä–µ—Ç—å –¥—É—Ä–≥–∏–µ –∞–Ω–∫–µ—Ç—ã", "4.–ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é"],
    //       ],
    //       resize_keyboard: true,
    //     },
    //   });
    // }
    // if (text == "4.–ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é") {
    //   return bot.sendMessage(chatId, "–ú–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ", {
    //     reply_markup: {
    //       remove_keyboard: true,
    //     },
    //   });
    // }
    // if (text === "/saysmth") {
    //   await bot.sendMessage(chatId, "You better be joking");
    //   return bot.sendSticker(
    //     chatId,
    //     "https://tlgrm.eu/_/stickers/ccd/a8d/ccda8d5d-d492-4393-8bb7-e33f77c24907/2.webp"
    //   );
    // }
    return bot.sendMessage(
      chatId,
      "Something went wrong, try again later",
      console.log(e)
    );
  }
  return bot.sendMessage(chatId, "–Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω—è–ª(");
});
